---
name: Build and Deploy
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  define_images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: "${{ github.repository }}"
      - name: Get changed image definitions
        id: changed-images-yaml
        uses: tj-actions/changed-files@v39
        with:
          dir_names: true
          dir_names_max_depth: 3
          quotepath: false
          files_yaml: |
            images:
              - '*/*/*.hcl'
            symlinks:
              - '*/*.hcl'
      - id: get-symlink-dirs
        run: |
          for file in ${{ steps.changed-images-yaml.outputs.symlinks_all_changed_files }}; do
            CHANGED="$CHANGED `ls -d $file/*/`"
          done
          echo 'changed_dirs="$CHANGED"' > $GITHUB_OUTPUT
      - id: set-images-matrix
        run: echo "matrix=[${{ steps.changed-images-yaml.outputs.images_all_changed_files}} ${{ steps.get-symlink-dirs.outputs.changed_dirs }}]" >> $GITHUB_OUTPUT
      - name: Debug
        run: echo ${{ steps.set-images-matrix.outputs.matrix }}
    outputs:
      images_matrix: ${{ steps.set-images-matrix.outputs.matrix }}

  build_and_deploy:
    needs: define_images
    runs-on: ubuntu-latest
    if: ${{ needs.define_images.outputs.images_matrix != '[]' && needs.define_images.outputs.images_matrix != '' }}
    env:
      DOCKER_USER: ${{ github.actor }}
      DOCKER_PW: ${{ secrets.GITHUB_TOKEN }}
      DOCKER_REGISTRY: ghcr.io
    strategy:
      fail-fast: false
      matrix:
        images: ${{ fromJSON(needs.define_images.outputs.images_matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build image
        id: build-image
        run: IMG=${{ matrix.images }} /pack.sh
      - name: Get image name
        id: get-image-name
        run: echo "image_name=`grep img_name ${{ matrix.images }}/variables.auto.pkrvars.hcl | awk '{print $3}'`"
      - name: Debug
        run: echo ${{ steps.get-image-name.image_name}}